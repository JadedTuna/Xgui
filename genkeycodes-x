#!/usr/bin/env python
#coding: utf-8
"""
Generate keycodes from <X11/keysymdef.h>
"""
from __future__ import print_function
import argparse

intro = """\
#ifndef XGUI_KEYCODES_HPP
#define XGUI_KEYCODES_HPP
/*
 * This file was automatically generated by genkeycodes-x
 * from a <X11/keysymdef.h> file
 */
#include <X11/keysym.h>


namespace Xgui
{
    enum KeyCode
    {
"""
ident = "        "
outro = """
    };
}

/* undef everything included from <X11/keysymdef.h>
 * to prevent namespace pollution
 */
"""
end = """
#endif /* XGUI_KEYCODES_HPP */
"""


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("path", nargs="?", default="/usr/include/X11/keysymdef.h",
            help="input file")
    parser.add_argument("-o", "--output", default="src/KeyCodes.hpp",
            help="output file")

    args = parser.parse_args()
    fpin = open(args.path, "r")
    fpout = open(args.output, "w")
    fpout.write(intro)

    defines = []

    for line in fpin:
        if line.startswith("#define"):
            # a definiton, convert
            name = line.split()[1]
            defines.append(name)
            fpout.write(ident + 
                    "Key{} = static_cast<size_t>({}),\n".format(name[3:],
                                                              name))
        elif line.startswith("#ifdef") or \
                line.startswith("#endif") or \
                line.startswith("#else"):
            # a check, write it here too
            fpout.write(ident + line)
    fpout.write(outro)
    for define in defines:
        fpout.write("#undef {}\n".format(define))
    fpout.write(end)

    fpin.close()
    fpout.close()
    print("Done.")

if __name__ == "__main__":
    main()

